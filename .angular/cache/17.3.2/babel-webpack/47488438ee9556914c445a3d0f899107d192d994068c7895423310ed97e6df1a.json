{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services/employee.service\";\nimport * as i4 from \"@app/_services/department.service\";\nimport * as i5 from \"@app/_services/alert.service\";\nimport * as i6 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction EmployeeTransferComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", employee_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate3(\" \", employee_r1.employeeId, \" - \", employee_r1.account == null ? null : employee_r1.account.firstName, \" \", employee_r1.account == null ? null : employee_r1.account.lastName, \" \");\n  }\n}\nfunction EmployeeTransferComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Employee is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeTransferComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, EmployeeTransferComponent_div_13_div_1_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.employeeId.errors.required);\n  }\n}\nfunction EmployeeTransferComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const department_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", department_r3.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", department_r3.name, \" \");\n  }\n}\nfunction EmployeeTransferComponent_div_21_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Department is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeTransferComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, EmployeeTransferComponent_div_21_div_1_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.departmentId.errors.required);\n  }\n}\nfunction EmployeeTransferComponent_div_26_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Reason is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeTransferComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, EmployeeTransferComponent_div_26_div_1_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.reason.errors.required);\n  }\n}\nfunction EmployeeTransferComponent_span_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 20);\n  }\n}\nexport let EmployeeTransferComponent = /*#__PURE__*/(() => {\n  class EmployeeTransferComponent {\n    constructor(formBuilder, route, router, employeeService, departmentService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.employeeService = employeeService;\n      this.departmentService = departmentService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n      this.employees = [];\n      this.departments = [];\n    }\n    ngOnInit() {\n      this.form = this.formBuilder.group({\n        employeeId: ['', Validators.required],\n        departmentId: ['', Validators.required],\n        reason: ['', Validators.required]\n      });\n      // Load employees and departments\n      this.employeeService.getAll().pipe(first()).subscribe(employees => {\n        this.employees = employees;\n      });\n      this.departmentService.getAll().pipe(first()).subscribe(departments => {\n        this.departments = departments;\n      });\n      // Handle employee selection\n      this.form.get('employeeId').valueChanges.subscribe(employeeId => {\n        if (employeeId) {\n          this.employeeService.getById(employeeId).pipe(first()).subscribe(employee => {\n            this.selectedEmployee = employee;\n            // Pre-select current department\n            this.form.patchValue({\n              departmentId: employee.departmentId\n            });\n          });\n        }\n      });\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      this.employeeService.transferDepartment(this.f.employeeId.value, this.f.departmentId.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee transferred successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    static #_ = this.ɵfac = function EmployeeTransferComponent_Factory(t) {\n      return new (t || EmployeeTransferComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i4.DepartmentService), i0.ɵɵdirectiveInject(i5.AlertService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EmployeeTransferComponent,\n      selectors: [[\"app-employee-transfer\"]],\n      decls: 33,\n      vars: 17,\n      consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-8\", \"offset-md-2\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"employeeId\"], [\"formControlName\", \"employeeId\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"departmentId\"], [\"formControlName\", \"departmentId\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"reason\"], [\"formControlName\", \"reason\", \"rows\", \"3\", \"placeholder\", \"Enter reason for transfer\", 1, \"form-control\", 3, \"ngClass\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"routerLink\", \"../\", 1, \"btn\", \"btn-link\"], [3, \"value\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n      template: function EmployeeTransferComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n          i0.ɵɵtext(4, \"Employee Department Transfer\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function EmployeeTransferComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n          i0.ɵɵtext(8, \"Employee\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"select\", 6)(10, \"option\", 7);\n          i0.ɵɵtext(11, \"Select Employee\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, EmployeeTransferComponent_option_12_Template, 2, 4, \"option\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(13, EmployeeTransferComponent_div_13_Template, 2, 1, \"div\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\", 10);\n          i0.ɵɵtext(16, \"Department\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"select\", 11)(18, \"option\", 7);\n          i0.ɵɵtext(19, \"Select Department\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(20, EmployeeTransferComponent_option_20_Template, 2, 2, \"option\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(21, EmployeeTransferComponent_div_21_Template, 2, 1, \"div\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"div\", 4)(23, \"label\", 12);\n          i0.ɵɵtext(24, \"Transfer Reason\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(25, \"textarea\", 13);\n          i0.ɵɵtemplate(26, EmployeeTransferComponent_div_26_Template, 2, 1, \"div\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"div\", 4)(28, \"button\", 14);\n          i0.ɵɵtemplate(29, EmployeeTransferComponent_span_29_Template, 1, 0, \"span\", 15);\n          i0.ɵɵtext(30, \" Transfer Employee \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"a\", 16);\n          i0.ɵɵtext(32, \"Cancel\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.submitted && ctx.f.employeeId.errors));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.employeeId.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.submitted && ctx.f.departmentId.errors));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.departmentId.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.submitted && ctx.f.reason.errors));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.reason.errors);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [i6.NgClass, i6.NgForOf, i6.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n      encapsulation: 2\n    });\n  }\n  return EmployeeTransferComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}