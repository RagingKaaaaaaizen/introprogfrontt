{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services/workflow.service\";\nimport * as i4 from \"@app/_services/employee.service\";\nimport * as i5 from \"@app/_services/alert.service\";\nimport * as i6 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction AddEditComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Type is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, AddEditComponent_div_20_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"type\"].errors[\"required\"]);\n  }\n}\nfunction AddEditComponent_div_25_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Details are required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, AddEditComponent_div_25_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"details\"].errors[\"required\"]);\n  }\n}\nfunction AddEditComponent_div_38_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Status is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, AddEditComponent_div_38_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"status\"].errors[\"required\"]);\n  }\n}\nfunction AddEditComponent_option_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", employee_r2.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", employee_r2.employeeId, \" - \", employee_r2.account == null ? null : employee_r2.account.email, \" \");\n  }\n}\nfunction AddEditComponent_div_46_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Employee is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, AddEditComponent_div_46_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"employeeId\"].errors[\"required\"]);\n  }\n}\nfunction AddEditComponent_span_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 27);\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, workflowService, employeeService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.workflowService = workflowService;\n      this.employeeService = employeeService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n      this.employees = [];\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      this.form = this.formBuilder.group({\n        type: ['', Validators.required],\n        details: ['', Validators.required],\n        status: ['', Validators.required],\n        employeeId: ['', Validators.required]\n      });\n      if (!this.isAddMode) {\n        this.workflowService.getById(this.id).pipe(first()).subscribe({\n          next: workflow => {\n            this.form.patchValue(workflow);\n          },\n          error: error => {\n            this.alertService.error('Error loading workflow');\n            console.error('Error loading workflow:', error);\n          }\n        });\n      }\n      // Load employees for dropdown\n      this.employeeService.getAll().pipe(first()).subscribe({\n        next: employees => {\n          this.employees = employees;\n        },\n        error: error => {\n          this.alertService.error('Error loading employees');\n          console.error('Error loading employees:', error);\n        }\n      });\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createWorkflow();\n      } else {\n        this.updateWorkflow();\n      }\n    }\n    createWorkflow() {\n      this.workflowService.create(this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Workflow created successfully');\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error('Error creating workflow');\n          console.error('Error creating workflow:', error);\n          this.loading = false;\n        }\n      });\n    }\n    updateWorkflow() {\n      this.workflowService.update(this.id, this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Workflow updated successfully');\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error('Error updating workflow');\n          console.error('Error updating workflow:', error);\n          this.loading = false;\n        }\n      });\n    }\n    static #_ = this.ɵfac = function AddEditComponent_Factory(t) {\n      return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.WorkflowService), i0.ɵɵdirectiveInject(i4.EmployeeService), i0.ɵɵdirectiveInject(i5.AlertService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddEditComponent,\n      selectors: [[\"app-workflow-add-edit\"]],\n      decls: 53,\n      vars: 21,\n      consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [1, \"form-label\"], [\"formControlName\", \"type\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"\"], [\"value\", \"Leave Request\"], [\"value\", \"Expense Claim\"], [\"value\", \"Training Request\"], [\"value\", \"Other\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"formControlName\", \"details\", \"rows\", \"4\", 1, \"form-control\", 3, \"ngClass\"], [\"formControlName\", \"status\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"Pending\"], [\"value\", \"Approved\"], [\"value\", \"Rejected\"], [\"formControlName\", \"employeeId\", 1, \"form-select\", 3, \"ngClass\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-end\"], [1, \"btn\", \"btn-primary\", \"me-2\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"..\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [3, \"value\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n      template: function AddEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\");\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n          i0.ɵɵtext(8, \"Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"select\", 6)(10, \"option\", 7);\n          i0.ɵɵtext(11, \"Select Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"option\", 8);\n          i0.ɵɵtext(13, \"Leave Request\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"option\", 9);\n          i0.ɵɵtext(15, \"Expense Claim\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"option\", 10);\n          i0.ɵɵtext(17, \"Training Request\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"option\", 11);\n          i0.ɵɵtext(19, \"Other\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(20, AddEditComponent_div_20_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"div\", 4)(22, \"label\", 5);\n          i0.ɵɵtext(23, \"Details\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(24, \"textarea\", 13);\n          i0.ɵɵtemplate(25, AddEditComponent_div_25_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"div\", 4)(27, \"label\", 5);\n          i0.ɵɵtext(28, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"select\", 14)(30, \"option\", 7);\n          i0.ɵɵtext(31, \"Select Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"option\", 15);\n          i0.ɵɵtext(33, \"Pending\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"option\", 16);\n          i0.ɵɵtext(35, \"Approved\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"option\", 17);\n          i0.ɵɵtext(37, \"Rejected\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(38, AddEditComponent_div_38_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(39, \"div\", 4)(40, \"label\", 5);\n          i0.ɵɵtext(41, \"Employee\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(42, \"select\", 18)(43, \"option\", 7);\n          i0.ɵɵtext(44, \"Select Employee\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(45, AddEditComponent_option_45_Template, 2, 3, \"option\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(46, AddEditComponent_div_46_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"div\", 20)(48, \"button\", 21);\n          i0.ɵɵtemplate(49, AddEditComponent_span_49_Template, 1, 0, \"span\", 22);\n          i0.ɵɵtext(50, \" Save \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(51, \"a\", 23);\n          i0.ɵɵtext(52, \"Cancel\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\"\", ctx.isAddMode ? \"Add\" : \"Edit\", \" Workflow\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.submitted && ctx.f[\"type\"].errors));\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"type\"].errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.submitted && ctx.f[\"details\"].errors));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"details\"].errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.submitted && ctx.f[\"status\"].errors));\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"status\"].errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.submitted && ctx.f[\"employeeId\"].errors));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"employeeId\"].errors);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [i6.NgClass, i6.NgForOf, i6.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n      encapsulation: 2\n    });\n  }\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}